pipeline Batterietemperaturmessungen_von_mobilenPipeline {
    
    block BatterietemperaturZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    
    block BatterieTempArchiveInterpreter oftype ArchiveInterpreter {
        archiveType : "zip";
    }

    
    block BatterieTempFilePicker oftype FilePicker {
        path : "./data.csv";
    }

    
    block BatterieTempTextFileInterpreter oftype TextFileInterpreter {}

   
    block BatterieTempCsvInterpreter oftype CSVInterpreter {
        delimiter : ";";
    }

    
    block BatterieTempColumnCleaner oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
    }

    
    block BatterieTempHeaderTranslation oftype CellWriter {
        at: range A1:F1;
        write: ["id", "producer", "model", "month", "temperature", "battery_temperature"];
    }

     
    block BatterieTempTableInterpreter oftype TableInterpreter {
        header : true;
        columns : [
            "id" oftype DeviceId, 
            "producer" oftype text, 
            "model" oftype text, 
            "month" oftype Month, 
            "temperature" oftype decimal, 
            "battery_temperature" oftype decimal
        ];
    }

    
    block TemperatureConverter oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        uses: CelsiusToFahrenheit;
    }

    
    block BatterieTempConverter oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        uses: CelsiusToFahrenheit;
    }

    
    block TemperatureLoader oftype SQLiteLoader {
        table : "temperatures";
        file : "./temperatures.sqlite";
    }

    
    transform CelsiusToFahrenheit {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;
        tempFahrenheit: (tempCelsius * 9/5) + 32;
    }   

    
    valuetype DeviceId oftype integer {
        constraints : [
            PositiveInteger
        ];
    }

    constraint PositiveInteger oftype RangeConstraint {
        lowerBound: 0;
        lowerBoundInclusive : false; 
    }

    
    valuetype Month oftype integer {
        constraints : [
            MonthConstraint
        ];
    }

    constraint MonthConstraint oftype RangeConstraint {
        lowerBound : 0;
        upperBound : 12; 
    }
    BatterietemperaturZipExtractor 
        -> BatterieTempArchiveInterpreter
        -> BatterieTempFilePicker
        -> BatterieTempTextFileInterpreter
        -> BatterieTempCsvInterpreter
        -> BatterieTempColumnCleaner
        -> BatterieTempHeaderTranslation
        -> BatterieTempTableInterpreter
        -> TemperatureConverter
        -> BatterieTempConverter
        -> TemperatureLoader;
}